// <auto-generated />
using System;
using Estoque;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Estoque.Migrations
{
    [DbContext(typeof(EstoqueContext))]
    [Migration("20210517162942_estoqueV1")]
    partial class estoqueV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Estoque.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Estoque.Peca", b =>
                {
                    b.Property<Guid>("IdPeca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<float>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdPeca");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("Estoque.Pedido", b =>
                {
                    b.Property<Guid>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ConfirmaPagamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdPedido");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Estoque.PedidoPeca", b =>
                {
                    b.Property<Guid>("IdPeca")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("char(36)");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.ToTable("PedidosPeca");
                });

            modelBuilder.Entity("Estoque.PedidoServico", b =>
                {
                    b.Property<Guid>("IdPedido")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdServico")
                        .HasColumnType("char(36)");

                    b.ToTable("PedidosServico");
                });

            modelBuilder.Entity("Estoque.Servico", b =>
                {
                    b.Property<Guid>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<float>("Preco")
                        .HasColumnType("float");

                    b.HasKey("IdServico");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Estoque.Pedido", b =>
                {
                    b.HasOne("Estoque.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
